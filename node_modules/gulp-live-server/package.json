{
  "name": "gulp-live-server",
  "version": "0.0.8",
  "description": "easy light weight server with livereload",
  "homepage": "https://github.com/gimm/gulp-live-server",
  "main": "./index.js",
  "scripts": {
    "test": "mocha"
  },
  "keywords": [
    "gulpplugin",
    "server",
    "static",
    "live",
    "livereload",
    "connect",
    "express"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/gimm/gulp-live-server"
  },
  "author": {
    "name": "yucc2008@gmail.com"
  },
  "license": "WTFPL",
  "dependencies": {
    "chalk": "^1.0.0",
    "connect": "^3.3.4",
    "connect-livereload": "^0.5.3",
    "debug": "^2.1.1",
    "deepmerge": "~0.2.7",
    "event-stream": "~3.2.1",
    "q": "^1.2.0",
    "serve-static": "^1.9.1",
    "tiny-lr": "0.0.9"
  },
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gimm/gulp-live-server/issues"
  },
  "devDependencies": {
    "gulp": "^3.8.11",
    "mocha": "^2.0.1",
    "should": "^5.2.0",
    "supertest": "^0.15.0"
  },
  "readme": "gulp-live-server\r\n===\r\n\r\n[![status][1]][2] [![downloads][3]][4] [![tag][5]][6] [![license][7]][8]\r\n\r\n[1]: http://img.shields.io/travis/gimm/gulp-live-server/master.svg?style=flat-square\r\n[2]: https://travis-ci.org/gimm/gulp-live-server\r\n\r\n[3]: http://img.shields.io/npm/dm/gulp-live-server.svg?style=flat-square\r\n[4]: https://www.npmjs.com/package/gulp-live-server\r\n\r\n[5]: https://img.shields.io/github/tag/gimm/gulp-live-server.svg?style=flat-square\r\n[6]: https://github.com/gimm/gulp-live-server/releases\r\n\r\n[7]: http://img.shields.io/badge/license-WTFPL-blue.svg?style=flat-square\r\n[8]: http://www.wtfpl.net\r\n\r\nA handy, light-weight server you're going to love.\r\n\r\n- [Install](#install)\r\n- [Usage](#usage)\r\n- [API](#api)\r\n    - [static](#staticfolder-port)\r\n    - [new](#newscript)\r\n    - [gls](#glsargs-options-livereload)\r\n    - [start](#start)\r\n    - [stop](#stop)\r\n    - [notify](#notifyevent)\r\n- [livereload.js](#livereloadjs)\r\n- [Debug](#debug)\r\n\r\nInstall\r\n---\r\n[![NPM](https://nodei.co/npm/gulp-live-server.png?compact=true)](https://nodei.co/npm/gulp-live-server/)\r\n\r\nUsage\r\n---\r\n- serve a static folder\r\n\r\n\t```js\r\n    var gulp = require('gulp');\r\n    var gls = require('gulp-live-server');\r\n    gulp.task('serve', function() {\r\n    \tvar server = gls.static();\r\n    \tserver.start();\r\n        //live reload changed resource(s)\r\n    \tgulp.watch(['static/**/*.css', 'static/**/*.html'], server.notify);\r\n\t});\r\n    ```\r\n- fire up your own server\r\n\r\n\t```js\r\n    gulp.task('serve', function() {\r\n    \tvar server = gls.new('myapp.js');\r\n    \tserver.start();\r\n    \tgulp.watch(['static/**/*.css', 'static/**/*.html'], server.notify);\r\n        //restart my server\r\n        gulp.watch('myapp.js', server.start);\r\n\t});\r\n    ```\r\nMore [examples](https://github.com/gimm/gulp-live-server/tree/master/example)\r\n\r\nAPI\r\n---\r\n### static([folder][, port])\r\n- `folder` - `String|Array` The folder(s) to serve.\r\n    Use array of strings if there're multi folders to serve.\r\n    If omitted, defaults to `public/`.\r\n- `port` - `Number` The port to listen on. Defaults to `3000`.\r\n- return [gls](#glsargs-options-livereload).\r\n\r\nConfig new server using the [default server script](https://github.com/gimm/gulp-live-server/blob/master/scripts/static.js), to serve the given `folder` on the specified `port`.\r\n\r\n### new(script)\r\n- `script` - `String` The script file to run.\r\n- return [gls](#glsargs-options-livereload).\r\n\r\nConfig new server using the given `script`.\r\n\r\n### gls(args[, options][, livereload])\r\n- `args` - `Array` The 2nd param for [ChildProcess.spawn](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options).\r\n- `options` - `Object` The 3rd param for [ChildProcess.spawn](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options),\r\nwill be mixin into the default value:\r\n\r\n    ```js\r\n        options = {\r\n            cwd: undefined\r\n        }\r\n        options.env = process.env;\r\n        options.env.NODE_ENV = 'development';\r\n    ```\r\n- `livereload` - `Boolean|Number|Object` The option for tiny-lr server. The default value is `35729`.\r\n    - `false` - will disable tiny-lr livereload server.\r\n    - `number` - treated as port number of livereload server.\r\n    - `object` - used to create tiny-lr server new tinylr.Server(livereload);\r\n\r\n**`gls` here is a reference of `var gls = require('gulp-live-server')`**. It aims to assemble configuration for the server child process as well as the tiny-lr server.\r\n**`static` and `new` are just shortcuts for this.**\r\nUsually, `static` and `new` will serve you well, but you can get more customized server with `gls`.\r\n\r\n### start()\r\n- return [promise](https://github.com/kriskowal/q/wiki/API-Reference) from [Q](https://www.npmjs.com/package/q)\r\n\r\nSpawn a new child process based on the configuration.\r\n- use [`ChildProcess.spawn`](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) to start a node process;\r\n- use [`tiny-lr`](https://github.com/mklabs/tiny-lr) provide livereload ability;\r\n\r\n### stop()\r\n- return [promise](https://github.com/kriskowal/q/wiki/API-Reference) from [Q](https://www.npmjs.com/package/q)\r\n\r\nStop the server.\r\n\r\n### notify([event])\r\n- `event` - `Event` Event object passed along with [gulp.watch](https://github.com/gulpjs/gulp/blob/master/docs/API.md#cbevent).\r\nOptional when used with `pipe`.\r\n\r\nTell livereload.js to reload the changed resource(s)\r\n\r\nlivereload.js\r\n---\r\nglup-live-server comes with [tiny-lr](https://github.com/mklabs/tiny-lr/) built in, which works as a livereload server,\r\nIn order to make livereload work with your pages, you still need `livereload.js` loaded with your page, there're 3 options to achieve this:\r\n- [LiveReload](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei?hl=en) for Chrome;\r\n- Use [connect-livereload](https://github.com/intesso/connect-livereload) middleware;\r\n- Add [livereload.js](https://github.com/livereload/livereload-js) in your page mannully;\r\n\r\nUsually, you can check `http://livereload:35729/livereload.js` to see if livereload.js is loaded with your page.\r\n\r\nDEBUG\r\n---\r\nIf you want more output, set the `DEBUG` environment variables to `*` or `gulp-live-server`.\r\n\r\n\r\n",
  "_id": "gulp-live-server@0.0.8",
  "_from": "gulp-live-server@"
}
